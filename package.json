{
  "name": "snippet-library",
  "displayName": "Snippet Library",
  "description": "A developer productivity tool for managing reusable code snippets",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Snippets",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "snippetLibrary.saveSnippet",
        "title": "Save as Snippet",
        "category": "Snippet Library",
        "icon": "$(save)"
      },
      {
        "command": "snippetLibrary.insertSnippet",
        "title": "Insert Snippet",
        "category": "Snippet Library",
        "icon": "$(insert)"
      },
      {
        "command": "snippetLibrary.manageSnippets",
        "title": "Manage Snippets",
        "category": "Snippet Library",
        "icon": "$(list-unordered)"
      },
      {
        "command": "snippetLibrary.openWebGUI",
        "title": "Open Web GUI",
        "category": "Snippet Library",
        "icon": "$(browser)"
      },
      {
        "command": "snippetLibrary.quickSearch",
        "title": "Quick Search Snippets",
        "category": "Snippet Library",
        "icon": "$(search)"
      }
    ],
    "keybindings": [
      {
        "command": "snippetLibrary.saveSnippet",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "editorHasSelection"
      },
      {
        "command": "snippetLibrary.insertSnippet",
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i"
      },
      {
        "command": "snippetLibrary.manageSnippets",
        "key": "ctrl+shift+m",
        "mac": "cmd+shift+m"
      },
      {
        "command": "snippetLibrary.openWebGUI",
        "key": "ctrl+shift+w",
        "mac": "cmd+shift+w"
      },
      {
        "command": "snippetLibrary.quickSearch",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f"
      }
    ],
    "configuration": {
      "title": "Snippet Library",
      "properties": {
        "snippetLibrary.storageLocation": {
          "type": "string",
          "enum": [
            "workspace",
            "global"
          ],
          "default": "global",
          "description": "Where to store snippets",
          "enumDescriptions": [
            "Store snippets in the current workspace (.vscode/snippets/)",
            "Store snippets globally for all workspaces"
          ]
        },
        "snippetLibrary.storageFormat": {
          "type": "string",
          "enum": [
            "json",
            "yaml"
          ],
          "default": "json",
          "description": "File format for snippet storage"
        },
        "snippetLibrary.customStoragePath": {
          "type": "string",
          "description": "Custom path for snippet storage (overrides storageLocation if set)"
        },
        "snippetLibrary.autoBackup": {
          "type": "boolean",
          "default": true,
          "description": "Automatically backup snippets"
        },
        "snippetLibrary.backupInterval": {
          "type": "number",
          "default": 86400000,
          "minimum": 300000,
          "description": "Backup interval in milliseconds (minimum: 5 minutes)"
        },
        "snippetLibrary.maxBackups": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 100,
          "description": "Maximum number of backup files to keep"
        },
        "snippetLibrary.webGUI": {
          "type": "object",
          "description": "Web GUI configuration",
          "properties": {
            "port": {
              "type": "number",
              "default": 3000,
              "minimum": 1024,
              "maximum": 65535,
              "description": "Port for the web GUI server"
            },
            "host": {
              "type": "string",
              "default": "localhost",
              "description": "Host for the web GUI server"
            },
            "autoStart": {
              "type": "boolean",
              "default": false,
              "description": "Automatically start web GUI server on extension activation"
            },
            "autoShutdown": {
              "type": "boolean",
              "default": true,
              "description": "Automatically shutdown web GUI server when VS Code closes"
            },
            "openInBrowser": {
              "type": "boolean",
              "default": true,
              "description": "Automatically open web GUI in browser when started"
            },
            "theme": {
              "type": "string",
              "enum": [
                "auto",
                "light",
                "dark"
              ],
              "default": "auto",
              "description": "Web GUI theme preference"
            }
          }
        },
        "snippetLibrary.keybindings": {
          "type": "object",
          "description": "Custom keybinding configuration",
          "properties": {
            "saveSnippet": {
              "type": "string",
              "default": "ctrl+shift+s",
              "description": "Keybinding for saving selected code as snippet"
            },
            "insertSnippet": {
              "type": "string",
              "default": "ctrl+shift+i",
              "description": "Keybinding for inserting a snippet"
            },
            "manageSnippets": {
              "type": "string",
              "default": "ctrl+shift+m",
              "description": "Keybinding for opening snippet management"
            },
            "openWebGUI": {
              "type": "string",
              "default": "ctrl+shift+w",
              "description": "Keybinding for opening web GUI"
            },
            "quickSearch": {
              "type": "string",
              "default": "ctrl+shift+f",
              "description": "Keybinding for quick snippet search"
            }
          }
        },
        "snippetLibrary.editor": {
          "type": "object",
          "description": "Editor integration preferences",
          "properties": {
            "enableIntelliSense": {
              "type": "boolean",
              "default": true,
              "description": "Enable snippet suggestions in IntelliSense"
            },
            "enableAutoComplete": {
              "type": "boolean",
              "default": true,
              "description": "Enable automatic snippet completion"
            },
            "showPreview": {
              "type": "boolean",
              "default": true,
              "description": "Show snippet preview in completion items"
            },
            "insertMode": {
              "type": "string",
              "enum": [
                "replace",
                "insert"
              ],
              "default": "insert",
              "description": "How to insert snippets when text is selected"
            }
          }
        },
        "snippetLibrary.search": {
          "type": "object",
          "description": "Search and filtering preferences",
          "properties": {
            "fuzzySearch": {
              "type": "boolean",
              "default": true,
              "description": "Enable fuzzy search matching"
            },
            "caseSensitive": {
              "type": "boolean",
              "default": false,
              "description": "Case sensitive search by default"
            },
            "maxResults": {
              "type": "number",
              "default": 50,
              "minimum": 10,
              "maximum": 500,
              "description": "Maximum number of search results to display"
            },
            "searchHistory": {
              "type": "boolean",
              "default": true,
              "description": "Remember search history"
            }
          }
        },
        "snippetLibrary.notifications": {
          "type": "object",
          "description": "Notification preferences",
          "properties": {
            "showSaveConfirmation": {
              "type": "boolean",
              "default": true,
              "description": "Show confirmation when snippet is saved"
            },
            "showImportSummary": {
              "type": "boolean",
              "default": true,
              "description": "Show summary after importing snippets"
            },
            "showBackupNotifications": {
              "type": "boolean",
              "default": false,
              "description": "Show notifications when backups are created"
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test:unit": "vitest run --config vitest.config.ts",
    "test:integration": "vitest run --config vitest.config.ts src/**/__tests__/integration/**/*.test.ts",
    "test:e2e": "vitest run --config vitest.config.ts src/**/__tests__/e2e/**/*.test.tsx",
    "test:performance": "vitest run --config vitest.config.ts src/__tests__/performance/**/*.test.ts",
    "test:compatibility": "vitest run --config vitest.config.ts src/__tests__/compatibility/**/*.test.ts",
    "test:comprehensive": "node scripts/test-ci.js",
    "test:coverage": "node scripts/test-coverage.js",
    "test:watch": "vitest",
    "test:ci": "vitest run --config vitest.config.comprehensive.ts"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/js-yaml": "^4.0.9",
    "@types/multer": "^2.0.0",
    "@types/node": "^18.0.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@types/socket.io-client": "^1.4.36",
    "@types/supertest": "^6.0.2",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vitest/ui": "^1.0.0",
    "eslint": "^8.28.0",
    "jsdom": "^26.1.0",
    "socket.io-client": "^4.8.1",
    "supertest": "^6.3.4",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.4",
    "vitest": "^1.0.0",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@reduxjs/toolkit": "^2.8.2",
    "@types/react-syntax-highlighter": "^15.5.13",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "js-yaml": "^4.1.0",
    "multer": "^2.0.2",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-redux": "^9.2.0",
    "react-router-dom": "^7.8.1",
    "react-syntax-highlighter": "^15.6.1",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "socket.io": "^4.8.1"
  }
}
